import com.nolimitscoaster.*;

import lib.*;
import sounds.*;

public class SoundHelper
{
	public static void init(Main script)
	{
		Simulator sim = script.getSimulator();
		Coaster coaster = sim.getCoasterForEntityId(script.getParentEntityId());

		if(coaster == null)
		{
			System.out.println("Error M8");
			return;
		}

		// ------ //
		// Sounds //
		// ------ //

		bool soundFound = false;

		// Bolliger & Mabillard
		if(hasSound(coaster, Sections.BM_LIFT))
		{
			BMLift lift = new BMLift(sim, coaster);
			soundFound = true;
		}
		if(hasSound(coaster, Sections.BM_ROAR))
		{
			BMRoar roar = new BMRoar(sim, coaster);
			soundFound = true;
		}

		// GCI
		if(hasSound(coaster, Sections.GCI_LIFT))
		{
			GCILift lift = new GCILift(sim, coaster);
			soundFound = true;
		}

		// RMC
		if(hasSound(coaster, Sections.RMC_LIFT))
		{
			RMCLift lift = new RMCLift(sim, coaster);
			soundFound = true;
		}
		
		// SCHIFF
		if(hasSound(coaster, Sections.SCHIFF_LIFT))
		{
			SCHIFFLift lift = new SCHIFFLift(sim, coaster);
			soundFound = true;
		}
		{
			SCHIFFRoar roar = new SCHIFFRoar(sim, coaster);
			soundFound = true;
		}
		
		// JET
		if(hasSound(coaster, Sections.JET_FUNKY_LIFT))
		{
			JetFunkyLift lift = new JetFunkyLift(sim, coaster);
			soundFound = true;
		}
		if(hasSound(coaster, Sections.JET_ROAR))
		{
			JetRoar roar = new JetRoar(sim, coaster);
			soundFound = true;
		}

		// Misc
		if(hasSound(coaster, Sections.MISC_CLUNKY_LIFT))
		{
			MiscClunkyLift lift = new MiscClunkyLift(sim, coaster);
			soundFound = true;
		}
		if(hasSound(coaster, Sections.MISC_OLD_LIFT))
		{
			MiscOldLift lift = new MiscOldLift(sim, coaster);
			soundFound = true;
		}
		if(hasSound(coaster, Sections.MISC_ROAR))
		{
			MiscRoar roar = new MiscRoar(sim, coaster);
			soundFound = true;
		}
		if(hasSound(coaster, Sections.MISC_LSM))
		{
			MiscLsm lsm = new MiscLsm(sim, coaster);
			soundFound = true;
		}

		if(!soundFound)
		{
			System.out.println("Warning: No Sounds found!");
		}
	}

	public static bool hasSound(Coaster coaster, String sectionId)
	{
		return coaster.getSection(sectionId + "_1") != null;
	}

}
